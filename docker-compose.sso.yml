version: '3.9'

services:
  postgres:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    ports:
      - ${PORT_DB}:${PORT_DB}
    volumes:
      - sso_db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_PASS}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cownetwork
  keycloak:
    depends_on:
      postgres:
        condition: service_healthy
    container_name: ${KEYCLOAK_HOST}
    image: bitnami/keycloak
    ports:
      - ${EXTERNAL_PORT}:${KEYCLOAK_PORT}
    environment:
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      KEYCLOAK_DATABASE_HOST: ${POSTGRES_HOST}
      KEYCLOAK_DATABASE_PORT: ${PORT_DB}
      KEYCLOAK_DATABASE_NAME: ${POSTGRES_DB}
      KEYCLOAK_DATABASE_USER: ${POSTGRES_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ENABLE_STATISTICS: true
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://keycloak:${KEYCLOAK_PORT}/health/ready"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - cownetwork

volumes:
  sso_db_data:
    external: true

networks:
  cownetwork:
    external: true
